#include <ap_int.h>
#include <hls_stream.h>
#include <ap_axi_sdata.h>

using namespace hls;
typedef ap_axis<32, 1, 1, 1> AP_AXIS;
typedef stream<AP_AXIS> AXI_STREAM;

const int height = 1080;
const int width = 1920;
const int sigma_space = 8;
const int sigma_range = 70;
// d >= 7 and d should be odd number
const int d = 25;
const int r_space = 12;
const float r_range = 105;
const int gx = 91;
const int gy = 161;
const int gz = 4;

const int beg_idx = 6;
const int end_idx_r = 6;
const int end_idx_c = 6;
const int lx = 30;

const int rem_r = 11;
const int rem_w = 0;
const int loop = 2119680;

const int shift_g = 10;
const int shift_gf = 4;
const int shift_s = 4;
const int shift_r = 8;

const int d1 = 332;
const int d2 = 108;
const int d3 = 35;

const int imgbit = 8;
const int cidx = 16;
const int gbit = 24;
const int gcbit = 8;
const int gfbit = 12;
const int gf2bit = 24;
const int gfccidx = 29;
const int gfcbit = 50;
const int gzbit = 96;
const int wzbit = 120;
const int gfzbit = 48;


typedef ap_uint<imgbit> iint;
typedef ap_uint<gbit> gint;
typedef ap_uint<gcbit> gcint;
typedef ap_uint<gf2bit> gf2int;
typedef ap_uint<gfccidx> gfgint;
typedef ap_uint<gzbit> gzint;
typedef ap_uint<wzbit> wzint;
typedef ap_uint<gfzbit> gfzint;
typedef ap_uint<gfcbit> gfcint;


const int lutr[256] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2};
const int dif_x[12] = {0, 1, 3, 4, 5, 7, 8, 9, 11, 12, 13, 15};
const int dif_y[12] = {8, 9, 11, 12, 13, 15, 0, 1, 3, 4, 5, 7};
const int dif_z[256] = {0, 2, 5, 7, 10, 12, 15, 17, 20, 22, 24, 27, 29, 32, 34, 37, 39, 41, 44, 46, 49, 51, 54, 56, 59, 61, 63, 66, 68, 71, 73, 76, 78, 80, 83, 85, 88, 90, 93, 95, 98, 100, 102, 105, 107, 110, 112, 115, 117, 119, 122, 124, 127, 129, 132, 134, 137, 139, 141, 144, 146, 149, 151, 154, 156, 158, 161, 163, 166, 168, 171, 173, 176, 178, 180, 183, 185, 188, 190, 193, 195, 197, 200, 202, 205, 207, 210, 212, 215, 217, 219, 222, 224, 227, 229, 232, 234, 236, 239, 241, 244, 246, 249, 251, 254, 0, 2, 5, 7, 10, 12, 15, 17, 20, 22, 24, 27, 29, 32, 34, 37, 39, 41, 44, 46, 49, 51, 54, 56, 59, 61, 63, 66, 68, 71, 73, 76, 78, 80, 83, 85, 88, 90, 93, 95, 98, 100, 102, 105, 107, 110, 112, 115, 117, 119, 122, 124, 127, 129, 132, 134, 137, 139, 141, 144, 146, 149, 151, 154, 156, 158, 161, 163, 166, 168, 171, 173, 176, 178, 180, 183, 185, 188, 190, 193, 195, 197, 200, 202, 205, 207, 210, 212, 215, 217, 219, 222, 224, 227, 229, 232, 234, 236, 239, 241, 244, 246, 249, 251, 254, 0, 2, 5, 7, 10, 12, 15, 17, 20, 22, 24, 27, 29, 32, 34, 37, 39, 41, 44, 46, 49, 51, 54, 56, 59, 61, 63, 66, 68, 71, 73, 76, 78, 80, 83, 85, 88, 90, 93, 95, 98, 100, 102, 105, 107, 110};
const int floor_z[256] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2};

